"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
from dotenv import load_dotenv
>>>>>>> 82b70b0 (Fixes)
>>>>>>> 3ce4b0e (FIxes)
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
<<<<<<< HEAD

=======
<<<<<<< HEAD

=======
load_dotenv(BASE_DIR / '.env')
>>>>>>> 82b70b0 (Fixes)
>>>>>>> 3ce4b0e (FIxes)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-87#w-sla4mv610qx=hqnm7i+@(=2r#7e)dxv2ak4#rm4kcym-i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.sites',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'backendAuth',
    'rest_framework',
    'rest_framework.authtoken',
    'dj_rest_auth',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'dj_rest_auth.registration',
    'allauth.socialaccount.providers.google',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'dj_rest_auth.jwt_auth.JWTCookieAuthentication',
    )
}

AUTH_USER_MODEL = 'backendAuth.CustomUser'

<<<<<<< HEAD
=======
<<<<<<< HEAD
=======
FRONTEND_RESET_URL = 'https://your-frontend-domain.com'  # Include trailing slash

>>>>>>> 82b70b0 (Fixes)
>>>>>>> 3ce4b0e (FIxes)
REST_AUTH = {
    'USE_JWT': True,
    'JWT_AUTH_COOKIE': 'access_token',
    'JWT_AUTH_REFRESH_COOKIE': 'refresh_token',
    'USER_DETAILS_SERIALIZER': 'dj_rest_auth.serializers.UserDetailsSerializer',
    'REGISTER_SERIALIZER': 'backendAuth.serializers.CustomRegisterSerializer',
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 3ce4b0e (FIxes)
}

CALLBACK_URL = 'http://127.0.0.1:8000/api/auth/google/'

SOCIALACCOUNT_AUTO_SIGNUP= True

# SOCIALACCOUNT_ADAPTER = "backendAuth.adapters.MySocialAccountAdapter"

# SOCIALACCOUNT_EMAIL_AUTHENTICATION = True
SOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT=True
# ACCOUNT_ADAPTER = "allauth.account.adapter.DefaultAccountAdapter"
# SOCIALACCOUNT_ADAPTER = "allauth.socialaccount.adapter.DefaultSocialAccountAdapter"


# Email and Account Settings
<<<<<<< HEAD
=======
=======
    'LOGIN_SERIALIZER': 'backendAuth.serializers.CustomLoginSerializer',
    'PASSWORD_RESET_SERIALIZER': 'backendAuth.serializers.CustomPasswordResetSerializer',
    'PASSWORD_RESET_CONFIRM_SERIALIZER': 'backendAuth.serializers.CustomPasswordResetConfirmSerializer'
}


CALLBACK_URL = 'http://127.0.0.1:8000/api/auth/google/'


SITE_ID = 1
SOCIALACCOUNT_ADAPTER = 'backendAuth.adapters.MySocialAccountAdapter'
ACCOUNT_ADAPTER = 'backendAuth.adapters.CustomAccountAdapter'
# Email and Account Settings
SOCIALACCOUNT_AUTO_SIGNUP= True
SOCIALACCOUNT_EMAIL_AUTHENTICATION_AUTO_CONNECT=True
>>>>>>> 82b70b0 (Fixes)
>>>>>>> 3ce4b0e (FIxes)
ACCOUNT_SIGNUP_FIELDS = ['email*', 'username', 'password1*', 'password2*']
ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_EMAIL_VERIFICATION = "none"
ACCOUNT_LOGIN_METHODS = {"email"}  # Use email for authentication
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 3ce4b0e (FIxes)

# Remove these non-standard settings
# ACCOUNT_LOGIN_METHODS = {'email'}  # Remove this line
# ACCOUNT_SIGNUP_FIELDS = ['email*', 'username', 'password1*', 'password2*']  # Remove this line


# ...existing code...
<<<<<<< HEAD
=======
=======
# Remove username from signup fields and make email the only login method
ACCOUNT_USERNAME_REQUIRED = False  # Don't require username
ACCOUNT_AUTHENTICATION_METHOD = 'email'  # Only allow email login
ACCOUNT_EMAIL_REQUIRED = True  # Make email mandatory
ACCOUNT_UNIQUE_EMAIL = True  # Enforce unique emails
ACCOUNT_USER_MODEL_USERNAME_FIELD = None  # No username field

>>>>>>> 82b70b0 (Fixes)
>>>>>>> 3ce4b0e (FIxes)
# Email backend settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 465
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_HOST_USER = 'faridswebapp@gmail.com'
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 3ce4b0e (FIxes)
EMAIL_HOST_PASSWORD = 'pflydhmyzzxivxli'
DEFAULT_FROM_EMAIL = 'faridswebapp@gmail.com'

# Remove ACCOUNT_LOGIN_METHODS as it's not needed with these settings

SITE_ID = 1
<<<<<<< HEAD
=======
=======
EMAIL_HOST_PASSWORD = 'xpzfntnxojbnsvid'
DEFAULT_FROM_EMAIL = 'faridswebapp@gmail.com'


>>>>>>> 82b70b0 (Fixes)
>>>>>>> 3ce4b0e (FIxes)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> 3ce4b0e (FIxes)
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


<<<<<<< HEAD
=======
=======

DATABASE_URL = os.getenv("DATABASE_URL")
DATABASES = {
     'default': {
         'ENGINE': os.getenv('ENGINE', 'django.db.backends.postgresql'),
         'NAME': os.getenv('NAME'),
         'USER': os.getenv('DB_USER'),
         'PASSWORD': os.getenv('PASSWORD'),
         'HOST': os.getenv('HOST'),
         'PORT': os.getenv('PORT'),
     }
}
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'test_db.sqlite3',
#     }
# }

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}

>>>>>>> 82b70b0 (Fixes)
>>>>>>> 3ce4b0e (FIxes)
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
